;buildInfoPackage: chisel3, version: 3.1.3, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2018-09-12 19:37:29.007, builtAtMillis: 1536781049007
circuit R2MDC : 
  module BF : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, out1 : {re : SInt<10>, im : SInt<10>}, out2 : {re : SInt<10>, im : SInt<10>}}
    
    node _T_13 = add(io.in1.re, io.in2.re) @[R2MDC.scala 26:27]
    node _T_14 = tail(_T_13, 1) @[R2MDC.scala 26:27]
    node _T_15 = asSInt(_T_14) @[R2MDC.scala 26:27]
    io.out1.re <= _T_15 @[R2MDC.scala 26:14]
    node _T_16 = add(io.in1.im, io.in2.im) @[R2MDC.scala 27:27]
    node _T_17 = tail(_T_16, 1) @[R2MDC.scala 27:27]
    node _T_18 = asSInt(_T_17) @[R2MDC.scala 27:27]
    io.out1.im <= _T_18 @[R2MDC.scala 27:14]
    node _T_19 = sub(io.in1.re, io.in2.re) @[R2MDC.scala 28:27]
    node _T_20 = tail(_T_19, 1) @[R2MDC.scala 28:27]
    node _T_21 = asSInt(_T_20) @[R2MDC.scala 28:27]
    io.out2.re <= _T_21 @[R2MDC.scala 28:14]
    node _T_22 = sub(io.in1.im, io.in2.im) @[R2MDC.scala 29:27]
    node _T_23 = tail(_T_22, 1) @[R2MDC.scala 29:27]
    node _T_24 = asSInt(_T_23) @[R2MDC.scala 29:27]
    io.out2.im <= _T_24 @[R2MDC.scala 29:14]
    
  module complexMul : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, out : {re : SInt<10>, im : SInt<10>}}
    
    node _T_11 = add(io.in1.re, io.in1.im) @[R2MDC.scala 48:37]
    node _T_12 = tail(_T_11, 1) @[R2MDC.scala 48:37]
    node _T_13 = asSInt(_T_12) @[R2MDC.scala 48:37]
    node _T_14 = mul(io.in2.re, _T_13) @[R2MDC.scala 48:24]
    node _T_15 = sub(io.in2.im, io.in2.re) @[R2MDC.scala 49:37]
    node _T_16 = tail(_T_15, 1) @[R2MDC.scala 49:37]
    node _T_17 = asSInt(_T_16) @[R2MDC.scala 49:37]
    node _T_18 = mul(io.in1.re, _T_17) @[R2MDC.scala 49:24]
    node _T_19 = add(io.in2.re, io.in2.im) @[R2MDC.scala 50:37]
    node _T_20 = tail(_T_19, 1) @[R2MDC.scala 50:37]
    node _T_21 = asSInt(_T_20) @[R2MDC.scala 50:37]
    node _T_22 = mul(io.in1.im, _T_21) @[R2MDC.scala 50:24]
    node _T_23 = sub(_T_14, _T_22) @[R2MDC.scala 51:22]
    node _T_24 = tail(_T_23, 1) @[R2MDC.scala 51:22]
    node _T_25 = asSInt(_T_24) @[R2MDC.scala 51:22]
    node _T_26 = shr(_T_25, 8) @[R2MDC.scala 51:28]
    io.out.re <= _T_26 @[R2MDC.scala 51:15]
    node _T_27 = add(_T_14, _T_18) @[R2MDC.scala 52:22]
    node _T_28 = tail(_T_27, 1) @[R2MDC.scala 52:22]
    node _T_29 = asSInt(_T_28) @[R2MDC.scala 52:22]
    node _T_30 = shr(_T_29, 8) @[R2MDC.scala 52:28]
    io.out.im <= _T_30 @[R2MDC.scala 52:15]
    
  module Switch : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, flip sel : UInt<1>, out1 : {re : SInt<10>, im : SInt<10>}, out2 : {re : SInt<10>, im : SInt<10>}}
    
    node _T_15 = mux(io.sel, io.in2, io.in1) @[R2MDC.scala 75:17]
    io.out1.im <= _T_15.im @[R2MDC.scala 75:11]
    io.out1.re <= _T_15.re @[R2MDC.scala 75:11]
    node _T_16 = mux(io.sel, io.in1, io.in2) @[R2MDC.scala 76:17]
    io.out2.im <= _T_16.im @[R2MDC.scala 76:11]
    io.out2.re <= _T_16.re @[R2MDC.scala 76:11]
    
  module BF_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, out1 : {re : SInt<10>, im : SInt<10>}, out2 : {re : SInt<10>, im : SInt<10>}}
    
    node _T_13 = add(io.in1.re, io.in2.re) @[R2MDC.scala 26:27]
    node _T_14 = tail(_T_13, 1) @[R2MDC.scala 26:27]
    node _T_15 = asSInt(_T_14) @[R2MDC.scala 26:27]
    io.out1.re <= _T_15 @[R2MDC.scala 26:14]
    node _T_16 = add(io.in1.im, io.in2.im) @[R2MDC.scala 27:27]
    node _T_17 = tail(_T_16, 1) @[R2MDC.scala 27:27]
    node _T_18 = asSInt(_T_17) @[R2MDC.scala 27:27]
    io.out1.im <= _T_18 @[R2MDC.scala 27:14]
    node _T_19 = sub(io.in1.re, io.in2.re) @[R2MDC.scala 28:27]
    node _T_20 = tail(_T_19, 1) @[R2MDC.scala 28:27]
    node _T_21 = asSInt(_T_20) @[R2MDC.scala 28:27]
    io.out2.re <= _T_21 @[R2MDC.scala 28:14]
    node _T_22 = sub(io.in1.im, io.in2.im) @[R2MDC.scala 29:27]
    node _T_23 = tail(_T_22, 1) @[R2MDC.scala 29:27]
    node _T_24 = asSInt(_T_23) @[R2MDC.scala 29:27]
    io.out2.im <= _T_24 @[R2MDC.scala 29:14]
    
  module complexMul_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, out : {re : SInt<10>, im : SInt<10>}}
    
    node _T_11 = add(io.in1.re, io.in1.im) @[R2MDC.scala 48:37]
    node _T_12 = tail(_T_11, 1) @[R2MDC.scala 48:37]
    node _T_13 = asSInt(_T_12) @[R2MDC.scala 48:37]
    node _T_14 = mul(io.in2.re, _T_13) @[R2MDC.scala 48:24]
    node _T_15 = sub(io.in2.im, io.in2.re) @[R2MDC.scala 49:37]
    node _T_16 = tail(_T_15, 1) @[R2MDC.scala 49:37]
    node _T_17 = asSInt(_T_16) @[R2MDC.scala 49:37]
    node _T_18 = mul(io.in1.re, _T_17) @[R2MDC.scala 49:24]
    node _T_19 = add(io.in2.re, io.in2.im) @[R2MDC.scala 50:37]
    node _T_20 = tail(_T_19, 1) @[R2MDC.scala 50:37]
    node _T_21 = asSInt(_T_20) @[R2MDC.scala 50:37]
    node _T_22 = mul(io.in1.im, _T_21) @[R2MDC.scala 50:24]
    node _T_23 = sub(_T_14, _T_22) @[R2MDC.scala 51:22]
    node _T_24 = tail(_T_23, 1) @[R2MDC.scala 51:22]
    node _T_25 = asSInt(_T_24) @[R2MDC.scala 51:22]
    node _T_26 = shr(_T_25, 8) @[R2MDC.scala 51:28]
    io.out.re <= _T_26 @[R2MDC.scala 51:15]
    node _T_27 = add(_T_14, _T_18) @[R2MDC.scala 52:22]
    node _T_28 = tail(_T_27, 1) @[R2MDC.scala 52:22]
    node _T_29 = asSInt(_T_28) @[R2MDC.scala 52:22]
    node _T_30 = shr(_T_29, 8) @[R2MDC.scala 52:28]
    io.out.im <= _T_30 @[R2MDC.scala 52:15]
    
  module Switch_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, flip sel : UInt<1>, out1 : {re : SInt<10>, im : SInt<10>}, out2 : {re : SInt<10>, im : SInt<10>}}
    
    node _T_15 = mux(io.sel, io.in2, io.in1) @[R2MDC.scala 75:17]
    io.out1.im <= _T_15.im @[R2MDC.scala 75:11]
    io.out1.re <= _T_15.re @[R2MDC.scala 75:11]
    node _T_16 = mux(io.sel, io.in1, io.in2) @[R2MDC.scala 76:17]
    io.out2.im <= _T_16.im @[R2MDC.scala 76:11]
    io.out2.re <= _T_16.re @[R2MDC.scala 76:11]
    
  module BF_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, out1 : {re : SInt<10>, im : SInt<10>}, out2 : {re : SInt<10>, im : SInt<10>}}
    
    node _T_13 = add(io.in1.re, io.in2.re) @[R2MDC.scala 26:27]
    node _T_14 = tail(_T_13, 1) @[R2MDC.scala 26:27]
    node _T_15 = asSInt(_T_14) @[R2MDC.scala 26:27]
    io.out1.re <= _T_15 @[R2MDC.scala 26:14]
    node _T_16 = add(io.in1.im, io.in2.im) @[R2MDC.scala 27:27]
    node _T_17 = tail(_T_16, 1) @[R2MDC.scala 27:27]
    node _T_18 = asSInt(_T_17) @[R2MDC.scala 27:27]
    io.out1.im <= _T_18 @[R2MDC.scala 27:14]
    node _T_19 = sub(io.in1.re, io.in2.re) @[R2MDC.scala 28:27]
    node _T_20 = tail(_T_19, 1) @[R2MDC.scala 28:27]
    node _T_21 = asSInt(_T_20) @[R2MDC.scala 28:27]
    io.out2.re <= _T_21 @[R2MDC.scala 28:14]
    node _T_22 = sub(io.in1.im, io.in2.im) @[R2MDC.scala 29:27]
    node _T_23 = tail(_T_22, 1) @[R2MDC.scala 29:27]
    node _T_24 = asSInt(_T_23) @[R2MDC.scala 29:27]
    io.out2.im <= _T_24 @[R2MDC.scala 29:14]
    
  module complexMul_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, out : {re : SInt<10>, im : SInt<10>}}
    
    node _T_11 = add(io.in1.re, io.in1.im) @[R2MDC.scala 48:37]
    node _T_12 = tail(_T_11, 1) @[R2MDC.scala 48:37]
    node _T_13 = asSInt(_T_12) @[R2MDC.scala 48:37]
    node _T_14 = mul(io.in2.re, _T_13) @[R2MDC.scala 48:24]
    node _T_15 = sub(io.in2.im, io.in2.re) @[R2MDC.scala 49:37]
    node _T_16 = tail(_T_15, 1) @[R2MDC.scala 49:37]
    node _T_17 = asSInt(_T_16) @[R2MDC.scala 49:37]
    node _T_18 = mul(io.in1.re, _T_17) @[R2MDC.scala 49:24]
    node _T_19 = add(io.in2.re, io.in2.im) @[R2MDC.scala 50:37]
    node _T_20 = tail(_T_19, 1) @[R2MDC.scala 50:37]
    node _T_21 = asSInt(_T_20) @[R2MDC.scala 50:37]
    node _T_22 = mul(io.in1.im, _T_21) @[R2MDC.scala 50:24]
    node _T_23 = sub(_T_14, _T_22) @[R2MDC.scala 51:22]
    node _T_24 = tail(_T_23, 1) @[R2MDC.scala 51:22]
    node _T_25 = asSInt(_T_24) @[R2MDC.scala 51:22]
    node _T_26 = shr(_T_25, 8) @[R2MDC.scala 51:28]
    io.out.re <= _T_26 @[R2MDC.scala 51:15]
    node _T_27 = add(_T_14, _T_18) @[R2MDC.scala 52:22]
    node _T_28 = tail(_T_27, 1) @[R2MDC.scala 52:22]
    node _T_29 = asSInt(_T_28) @[R2MDC.scala 52:22]
    node _T_30 = shr(_T_29, 8) @[R2MDC.scala 52:28]
    io.out.im <= _T_30 @[R2MDC.scala 52:15]
    
  module Switch_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, flip sel : UInt<1>, out1 : {re : SInt<10>, im : SInt<10>}, out2 : {re : SInt<10>, im : SInt<10>}}
    
    node _T_15 = mux(io.sel, io.in2, io.in1) @[R2MDC.scala 75:17]
    io.out1.im <= _T_15.im @[R2MDC.scala 75:11]
    io.out1.re <= _T_15.re @[R2MDC.scala 75:11]
    node _T_16 = mux(io.sel, io.in1, io.in2) @[R2MDC.scala 76:17]
    io.out2.im <= _T_16.im @[R2MDC.scala 76:11]
    io.out2.re <= _T_16.re @[R2MDC.scala 76:11]
    
  module BF_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, out1 : {re : SInt<10>, im : SInt<10>}, out2 : {re : SInt<10>, im : SInt<10>}}
    
    node _T_13 = add(io.in1.re, io.in2.re) @[R2MDC.scala 26:27]
    node _T_14 = tail(_T_13, 1) @[R2MDC.scala 26:27]
    node _T_15 = asSInt(_T_14) @[R2MDC.scala 26:27]
    io.out1.re <= _T_15 @[R2MDC.scala 26:14]
    node _T_16 = add(io.in1.im, io.in2.im) @[R2MDC.scala 27:27]
    node _T_17 = tail(_T_16, 1) @[R2MDC.scala 27:27]
    node _T_18 = asSInt(_T_17) @[R2MDC.scala 27:27]
    io.out1.im <= _T_18 @[R2MDC.scala 27:14]
    node _T_19 = sub(io.in1.re, io.in2.re) @[R2MDC.scala 28:27]
    node _T_20 = tail(_T_19, 1) @[R2MDC.scala 28:27]
    node _T_21 = asSInt(_T_20) @[R2MDC.scala 28:27]
    io.out2.re <= _T_21 @[R2MDC.scala 28:14]
    node _T_22 = sub(io.in1.im, io.in2.im) @[R2MDC.scala 29:27]
    node _T_23 = tail(_T_22, 1) @[R2MDC.scala 29:27]
    node _T_24 = asSInt(_T_23) @[R2MDC.scala 29:27]
    io.out2.im <= _T_24 @[R2MDC.scala 29:14]
    
  module complexMul_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, out : {re : SInt<10>, im : SInt<10>}}
    
    node _T_11 = add(io.in1.re, io.in1.im) @[R2MDC.scala 48:37]
    node _T_12 = tail(_T_11, 1) @[R2MDC.scala 48:37]
    node _T_13 = asSInt(_T_12) @[R2MDC.scala 48:37]
    node _T_14 = mul(io.in2.re, _T_13) @[R2MDC.scala 48:24]
    node _T_15 = sub(io.in2.im, io.in2.re) @[R2MDC.scala 49:37]
    node _T_16 = tail(_T_15, 1) @[R2MDC.scala 49:37]
    node _T_17 = asSInt(_T_16) @[R2MDC.scala 49:37]
    node _T_18 = mul(io.in1.re, _T_17) @[R2MDC.scala 49:24]
    node _T_19 = add(io.in2.re, io.in2.im) @[R2MDC.scala 50:37]
    node _T_20 = tail(_T_19, 1) @[R2MDC.scala 50:37]
    node _T_21 = asSInt(_T_20) @[R2MDC.scala 50:37]
    node _T_22 = mul(io.in1.im, _T_21) @[R2MDC.scala 50:24]
    node _T_23 = sub(_T_14, _T_22) @[R2MDC.scala 51:22]
    node _T_24 = tail(_T_23, 1) @[R2MDC.scala 51:22]
    node _T_25 = asSInt(_T_24) @[R2MDC.scala 51:22]
    node _T_26 = shr(_T_25, 8) @[R2MDC.scala 51:28]
    io.out.re <= _T_26 @[R2MDC.scala 51:15]
    node _T_27 = add(_T_14, _T_18) @[R2MDC.scala 52:22]
    node _T_28 = tail(_T_27, 1) @[R2MDC.scala 52:22]
    node _T_29 = asSInt(_T_28) @[R2MDC.scala 52:22]
    node _T_30 = shr(_T_29, 8) @[R2MDC.scala 52:28]
    io.out.im <= _T_30 @[R2MDC.scala 52:15]
    
  module Switch_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, flip sel : UInt<1>, out1 : {re : SInt<10>, im : SInt<10>}, out2 : {re : SInt<10>, im : SInt<10>}}
    
    node _T_15 = mux(io.sel, io.in2, io.in1) @[R2MDC.scala 75:17]
    io.out1.im <= _T_15.im @[R2MDC.scala 75:11]
    io.out1.re <= _T_15.re @[R2MDC.scala 75:11]
    node _T_16 = mux(io.sel, io.in1, io.in2) @[R2MDC.scala 76:17]
    io.out2.im <= _T_16.im @[R2MDC.scala 76:11]
    io.out2.re <= _T_16.re @[R2MDC.scala 76:11]
    
  module BF_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, out1 : {re : SInt<10>, im : SInt<10>}, out2 : {re : SInt<10>, im : SInt<10>}}
    
    node _T_13 = add(io.in1.re, io.in2.re) @[R2MDC.scala 26:27]
    node _T_14 = tail(_T_13, 1) @[R2MDC.scala 26:27]
    node _T_15 = asSInt(_T_14) @[R2MDC.scala 26:27]
    io.out1.re <= _T_15 @[R2MDC.scala 26:14]
    node _T_16 = add(io.in1.im, io.in2.im) @[R2MDC.scala 27:27]
    node _T_17 = tail(_T_16, 1) @[R2MDC.scala 27:27]
    node _T_18 = asSInt(_T_17) @[R2MDC.scala 27:27]
    io.out1.im <= _T_18 @[R2MDC.scala 27:14]
    node _T_19 = sub(io.in1.re, io.in2.re) @[R2MDC.scala 28:27]
    node _T_20 = tail(_T_19, 1) @[R2MDC.scala 28:27]
    node _T_21 = asSInt(_T_20) @[R2MDC.scala 28:27]
    io.out2.re <= _T_21 @[R2MDC.scala 28:14]
    node _T_22 = sub(io.in1.im, io.in2.im) @[R2MDC.scala 29:27]
    node _T_23 = tail(_T_22, 1) @[R2MDC.scala 29:27]
    node _T_24 = asSInt(_T_23) @[R2MDC.scala 29:27]
    io.out2.im <= _T_24 @[R2MDC.scala 29:14]
    
  module complexMul_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, out : {re : SInt<10>, im : SInt<10>}}
    
    node _T_11 = add(io.in1.re, io.in1.im) @[R2MDC.scala 48:37]
    node _T_12 = tail(_T_11, 1) @[R2MDC.scala 48:37]
    node _T_13 = asSInt(_T_12) @[R2MDC.scala 48:37]
    node _T_14 = mul(io.in2.re, _T_13) @[R2MDC.scala 48:24]
    node _T_15 = sub(io.in2.im, io.in2.re) @[R2MDC.scala 49:37]
    node _T_16 = tail(_T_15, 1) @[R2MDC.scala 49:37]
    node _T_17 = asSInt(_T_16) @[R2MDC.scala 49:37]
    node _T_18 = mul(io.in1.re, _T_17) @[R2MDC.scala 49:24]
    node _T_19 = add(io.in2.re, io.in2.im) @[R2MDC.scala 50:37]
    node _T_20 = tail(_T_19, 1) @[R2MDC.scala 50:37]
    node _T_21 = asSInt(_T_20) @[R2MDC.scala 50:37]
    node _T_22 = mul(io.in1.im, _T_21) @[R2MDC.scala 50:24]
    node _T_23 = sub(_T_14, _T_22) @[R2MDC.scala 51:22]
    node _T_24 = tail(_T_23, 1) @[R2MDC.scala 51:22]
    node _T_25 = asSInt(_T_24) @[R2MDC.scala 51:22]
    node _T_26 = shr(_T_25, 8) @[R2MDC.scala 51:28]
    io.out.re <= _T_26 @[R2MDC.scala 51:15]
    node _T_27 = add(_T_14, _T_18) @[R2MDC.scala 52:22]
    node _T_28 = tail(_T_27, 1) @[R2MDC.scala 52:22]
    node _T_29 = asSInt(_T_28) @[R2MDC.scala 52:22]
    node _T_30 = shr(_T_29, 8) @[R2MDC.scala 52:28]
    io.out.im <= _T_30 @[R2MDC.scala 52:15]
    
  module Switch_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, flip sel : UInt<1>, out1 : {re : SInt<10>, im : SInt<10>}, out2 : {re : SInt<10>, im : SInt<10>}}
    
    node _T_15 = mux(io.sel, io.in2, io.in1) @[R2MDC.scala 75:17]
    io.out1.im <= _T_15.im @[R2MDC.scala 75:11]
    io.out1.re <= _T_15.re @[R2MDC.scala 75:11]
    node _T_16 = mux(io.sel, io.in1, io.in2) @[R2MDC.scala 76:17]
    io.out2.im <= _T_16.im @[R2MDC.scala 76:11]
    io.out2.re <= _T_16.re @[R2MDC.scala 76:11]
    
  module BF_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in1 : {re : SInt<10>, im : SInt<10>}, flip in2 : {re : SInt<10>, im : SInt<10>}, out1 : {re : SInt<10>, im : SInt<10>}, out2 : {re : SInt<10>, im : SInt<10>}}
    
    node _T_13 = add(io.in1.re, io.in2.re) @[R2MDC.scala 26:27]
    node _T_14 = tail(_T_13, 1) @[R2MDC.scala 26:27]
    node _T_15 = asSInt(_T_14) @[R2MDC.scala 26:27]
    io.out1.re <= _T_15 @[R2MDC.scala 26:14]
    node _T_16 = add(io.in1.im, io.in2.im) @[R2MDC.scala 27:27]
    node _T_17 = tail(_T_16, 1) @[R2MDC.scala 27:27]
    node _T_18 = asSInt(_T_17) @[R2MDC.scala 27:27]
    io.out1.im <= _T_18 @[R2MDC.scala 27:14]
    node _T_19 = sub(io.in1.re, io.in2.re) @[R2MDC.scala 28:27]
    node _T_20 = tail(_T_19, 1) @[R2MDC.scala 28:27]
    node _T_21 = asSInt(_T_20) @[R2MDC.scala 28:27]
    io.out2.re <= _T_21 @[R2MDC.scala 28:14]
    node _T_22 = sub(io.in1.im, io.in2.im) @[R2MDC.scala 29:27]
    node _T_23 = tail(_T_22, 1) @[R2MDC.scala 29:27]
    node _T_24 = asSInt(_T_23) @[R2MDC.scala 29:27]
    io.out2.im <= _T_24 @[R2MDC.scala 29:14]
    
  module R2MDC : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip dIn : {re : SInt<10>, im : SInt<10>}, flip din_valid : UInt<1>, dOut1 : {re : SInt<10>, im : SInt<10>}, dOut2 : {re : SInt<10>, im : SInt<10>}, dout_valid : UInt<1>}
    
    reg cnt : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[R2MDC.scala 120:20]
    when io.din_valid : @[R2MDC.scala 121:21]
      node _T_18 = add(cnt, UInt<1>("h01")) @[R2MDC.scala 122:16]
      node _T_19 = tail(_T_18, 1) @[R2MDC.scala 122:16]
      cnt <= _T_19 @[R2MDC.scala 122:9]
      skip @[R2MDC.scala 121:21]
    wire _T_23 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 124:57]
    node _T_24 = asUInt(asSInt(UInt<20>("h00"))) @[R2MDC.scala 124:57]
    wire _T_26 : UInt<20>
    _T_26 <= _T_24
    node _T_27 = bits(_T_26, 9, 0) @[R2MDC.scala 124:57]
    node _T_28 = asSInt(_T_27) @[R2MDC.scala 124:57]
    _T_23.im <= _T_28 @[R2MDC.scala 124:57]
    node _T_29 = bits(_T_26, 19, 10) @[R2MDC.scala 124:57]
    node _T_30 = asSInt(_T_29) @[R2MDC.scala 124:57]
    _T_23.re <= _T_30 @[R2MDC.scala 124:57]
    wire _T_34 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 124:57]
    node _T_35 = asUInt(asSInt(UInt<20>("h00"))) @[R2MDC.scala 124:57]
    wire _T_37 : UInt<20>
    _T_37 <= _T_35
    node _T_38 = bits(_T_37, 9, 0) @[R2MDC.scala 124:57]
    node _T_39 = asSInt(_T_38) @[R2MDC.scala 124:57]
    _T_34.im <= _T_39 @[R2MDC.scala 124:57]
    node _T_40 = bits(_T_37, 19, 10) @[R2MDC.scala 124:57]
    node _T_41 = asSInt(_T_40) @[R2MDC.scala 124:57]
    _T_34.re <= _T_41 @[R2MDC.scala 124:57]
    wire _T_45 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 124:57]
    node _T_46 = asUInt(asSInt(UInt<20>("h00"))) @[R2MDC.scala 124:57]
    wire _T_48 : UInt<20>
    _T_48 <= _T_46
    node _T_49 = bits(_T_48, 9, 0) @[R2MDC.scala 124:57]
    node _T_50 = asSInt(_T_49) @[R2MDC.scala 124:57]
    _T_45.im <= _T_50 @[R2MDC.scala 124:57]
    node _T_51 = bits(_T_48, 19, 10) @[R2MDC.scala 124:57]
    node _T_52 = asSInt(_T_51) @[R2MDC.scala 124:57]
    _T_45.re <= _T_52 @[R2MDC.scala 124:57]
    wire _T_56 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 124:57]
    node _T_57 = asUInt(asSInt(UInt<20>("h00"))) @[R2MDC.scala 124:57]
    wire _T_59 : UInt<20>
    _T_59 <= _T_57
    node _T_60 = bits(_T_59, 9, 0) @[R2MDC.scala 124:57]
    node _T_61 = asSInt(_T_60) @[R2MDC.scala 124:57]
    _T_56.im <= _T_61 @[R2MDC.scala 124:57]
    node _T_62 = bits(_T_59, 19, 10) @[R2MDC.scala 124:57]
    node _T_63 = asSInt(_T_62) @[R2MDC.scala 124:57]
    _T_56.re <= _T_63 @[R2MDC.scala 124:57]
    wire _T_67 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 124:57]
    node _T_68 = asUInt(asSInt(UInt<20>("h00"))) @[R2MDC.scala 124:57]
    wire _T_70 : UInt<20>
    _T_70 <= _T_68
    node _T_71 = bits(_T_70, 9, 0) @[R2MDC.scala 124:57]
    node _T_72 = asSInt(_T_71) @[R2MDC.scala 124:57]
    _T_67.im <= _T_72 @[R2MDC.scala 124:57]
    node _T_73 = bits(_T_70, 19, 10) @[R2MDC.scala 124:57]
    node _T_74 = asSInt(_T_73) @[R2MDC.scala 124:57]
    _T_67.re <= _T_74 @[R2MDC.scala 124:57]
    wire _T_78 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 124:57]
    node _T_79 = asUInt(asSInt(UInt<20>("h00"))) @[R2MDC.scala 124:57]
    wire _T_81 : UInt<20>
    _T_81 <= _T_79
    node _T_82 = bits(_T_81, 9, 0) @[R2MDC.scala 124:57]
    node _T_83 = asSInt(_T_82) @[R2MDC.scala 124:57]
    _T_78.im <= _T_83 @[R2MDC.scala 124:57]
    node _T_84 = bits(_T_81, 19, 10) @[R2MDC.scala 124:57]
    node _T_85 = asSInt(_T_84) @[R2MDC.scala 124:57]
    _T_78.re <= _T_85 @[R2MDC.scala 124:57]
    wire out1 : {re : SInt<10>, im : SInt<10>}[6] @[R2MDC.scala 124:21]
    out1[0].im <= _T_23.im @[R2MDC.scala 124:21]
    out1[0].re <= _T_23.re @[R2MDC.scala 124:21]
    out1[1].im <= _T_34.im @[R2MDC.scala 124:21]
    out1[1].re <= _T_34.re @[R2MDC.scala 124:21]
    out1[2].im <= _T_45.im @[R2MDC.scala 124:21]
    out1[2].re <= _T_45.re @[R2MDC.scala 124:21]
    out1[3].im <= _T_56.im @[R2MDC.scala 124:21]
    out1[3].re <= _T_56.re @[R2MDC.scala 124:21]
    out1[4].im <= _T_67.im @[R2MDC.scala 124:21]
    out1[4].re <= _T_67.re @[R2MDC.scala 124:21]
    out1[5].im <= _T_78.im @[R2MDC.scala 124:21]
    out1[5].re <= _T_78.re @[R2MDC.scala 124:21]
    wire _T_100 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 125:57]
    node _T_101 = asUInt(asSInt(UInt<20>("h00"))) @[R2MDC.scala 125:57]
    wire _T_103 : UInt<20>
    _T_103 <= _T_101
    node _T_104 = bits(_T_103, 9, 0) @[R2MDC.scala 125:57]
    node _T_105 = asSInt(_T_104) @[R2MDC.scala 125:57]
    _T_100.im <= _T_105 @[R2MDC.scala 125:57]
    node _T_106 = bits(_T_103, 19, 10) @[R2MDC.scala 125:57]
    node _T_107 = asSInt(_T_106) @[R2MDC.scala 125:57]
    _T_100.re <= _T_107 @[R2MDC.scala 125:57]
    wire _T_111 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 125:57]
    node _T_112 = asUInt(asSInt(UInt<20>("h00"))) @[R2MDC.scala 125:57]
    wire _T_114 : UInt<20>
    _T_114 <= _T_112
    node _T_115 = bits(_T_114, 9, 0) @[R2MDC.scala 125:57]
    node _T_116 = asSInt(_T_115) @[R2MDC.scala 125:57]
    _T_111.im <= _T_116 @[R2MDC.scala 125:57]
    node _T_117 = bits(_T_114, 19, 10) @[R2MDC.scala 125:57]
    node _T_118 = asSInt(_T_117) @[R2MDC.scala 125:57]
    _T_111.re <= _T_118 @[R2MDC.scala 125:57]
    wire _T_122 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 125:57]
    node _T_123 = asUInt(asSInt(UInt<20>("h00"))) @[R2MDC.scala 125:57]
    wire _T_125 : UInt<20>
    _T_125 <= _T_123
    node _T_126 = bits(_T_125, 9, 0) @[R2MDC.scala 125:57]
    node _T_127 = asSInt(_T_126) @[R2MDC.scala 125:57]
    _T_122.im <= _T_127 @[R2MDC.scala 125:57]
    node _T_128 = bits(_T_125, 19, 10) @[R2MDC.scala 125:57]
    node _T_129 = asSInt(_T_128) @[R2MDC.scala 125:57]
    _T_122.re <= _T_129 @[R2MDC.scala 125:57]
    wire _T_133 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 125:57]
    node _T_134 = asUInt(asSInt(UInt<20>("h00"))) @[R2MDC.scala 125:57]
    wire _T_136 : UInt<20>
    _T_136 <= _T_134
    node _T_137 = bits(_T_136, 9, 0) @[R2MDC.scala 125:57]
    node _T_138 = asSInt(_T_137) @[R2MDC.scala 125:57]
    _T_133.im <= _T_138 @[R2MDC.scala 125:57]
    node _T_139 = bits(_T_136, 19, 10) @[R2MDC.scala 125:57]
    node _T_140 = asSInt(_T_139) @[R2MDC.scala 125:57]
    _T_133.re <= _T_140 @[R2MDC.scala 125:57]
    wire _T_144 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 125:57]
    node _T_145 = asUInt(asSInt(UInt<20>("h00"))) @[R2MDC.scala 125:57]
    wire _T_147 : UInt<20>
    _T_147 <= _T_145
    node _T_148 = bits(_T_147, 9, 0) @[R2MDC.scala 125:57]
    node _T_149 = asSInt(_T_148) @[R2MDC.scala 125:57]
    _T_144.im <= _T_149 @[R2MDC.scala 125:57]
    node _T_150 = bits(_T_147, 19, 10) @[R2MDC.scala 125:57]
    node _T_151 = asSInt(_T_150) @[R2MDC.scala 125:57]
    _T_144.re <= _T_151 @[R2MDC.scala 125:57]
    wire _T_155 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 125:57]
    node _T_156 = asUInt(asSInt(UInt<20>("h00"))) @[R2MDC.scala 125:57]
    wire _T_158 : UInt<20>
    _T_158 <= _T_156
    node _T_159 = bits(_T_158, 9, 0) @[R2MDC.scala 125:57]
    node _T_160 = asSInt(_T_159) @[R2MDC.scala 125:57]
    _T_155.im <= _T_160 @[R2MDC.scala 125:57]
    node _T_161 = bits(_T_158, 19, 10) @[R2MDC.scala 125:57]
    node _T_162 = asSInt(_T_161) @[R2MDC.scala 125:57]
    _T_155.re <= _T_162 @[R2MDC.scala 125:57]
    wire out2 : {re : SInt<10>, im : SInt<10>}[6] @[R2MDC.scala 125:21]
    out2[0].im <= _T_100.im @[R2MDC.scala 125:21]
    out2[0].re <= _T_100.re @[R2MDC.scala 125:21]
    out2[1].im <= _T_111.im @[R2MDC.scala 125:21]
    out2[1].re <= _T_111.re @[R2MDC.scala 125:21]
    out2[2].im <= _T_122.im @[R2MDC.scala 125:21]
    out2[2].re <= _T_122.re @[R2MDC.scala 125:21]
    out2[3].im <= _T_133.im @[R2MDC.scala 125:21]
    out2[3].re <= _T_133.re @[R2MDC.scala 125:21]
    out2[4].im <= _T_144.im @[R2MDC.scala 125:21]
    out2[4].re <= _T_144.re @[R2MDC.scala 125:21]
    out2[5].im <= _T_155.im @[R2MDC.scala 125:21]
    out2[5].re <= _T_155.re @[R2MDC.scala 125:21]
    reg _T_176 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_176.im <= io.dIn.im @[Reg.scala 12:23]
      _T_176.re <= io.dIn.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_178 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_178.im <= _T_176.im @[Reg.scala 12:23]
      _T_178.re <= _T_176.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_180 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_180.im <= _T_178.im @[Reg.scala 12:23]
      _T_180.re <= _T_178.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_182 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_182.im <= _T_180.im @[Reg.scala 12:23]
      _T_182.re <= _T_180.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_184 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_184.im <= _T_182.im @[Reg.scala 12:23]
      _T_184.re <= _T_182.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_186 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_186.im <= _T_184.im @[Reg.scala 12:23]
      _T_186.re <= _T_184.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_188 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_188.im <= _T_186.im @[Reg.scala 12:23]
      _T_188.re <= _T_186.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_190 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_190.im <= _T_188.im @[Reg.scala 12:23]
      _T_190.re <= _T_188.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_192 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_192.im <= _T_190.im @[Reg.scala 12:23]
      _T_192.re <= _T_190.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_194 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_194.im <= _T_192.im @[Reg.scala 12:23]
      _T_194.re <= _T_192.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_196 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_196.im <= _T_194.im @[Reg.scala 12:23]
      _T_196.re <= _T_194.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_198 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_198.im <= _T_196.im @[Reg.scala 12:23]
      _T_198.re <= _T_196.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_200 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_200.im <= _T_198.im @[Reg.scala 12:23]
      _T_200.re <= _T_198.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_202 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_202.im <= _T_200.im @[Reg.scala 12:23]
      _T_202.re <= _T_200.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_204 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_204.im <= _T_202.im @[Reg.scala 12:23]
      _T_204.re <= _T_202.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_206 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_206.im <= _T_204.im @[Reg.scala 12:23]
      _T_206.re <= _T_204.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_208 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_208.im <= _T_206.im @[Reg.scala 12:23]
      _T_208.re <= _T_206.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_210 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_210.im <= _T_208.im @[Reg.scala 12:23]
      _T_210.re <= _T_208.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_212 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_212.im <= _T_210.im @[Reg.scala 12:23]
      _T_212.re <= _T_210.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_214 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_214.im <= _T_212.im @[Reg.scala 12:23]
      _T_214.re <= _T_212.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_216 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_216.im <= _T_214.im @[Reg.scala 12:23]
      _T_216.re <= _T_214.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_218 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_218.im <= _T_216.im @[Reg.scala 12:23]
      _T_218.re <= _T_216.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_220 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_220.im <= _T_218.im @[Reg.scala 12:23]
      _T_220.re <= _T_218.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_222 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_222.im <= _T_220.im @[Reg.scala 12:23]
      _T_222.re <= _T_220.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_224 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_224.im <= _T_222.im @[Reg.scala 12:23]
      _T_224.re <= _T_222.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_226 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_226.im <= _T_224.im @[Reg.scala 12:23]
      _T_226.re <= _T_224.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_228 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_228.im <= _T_226.im @[Reg.scala 12:23]
      _T_228.re <= _T_226.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_230 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_230.im <= _T_228.im @[Reg.scala 12:23]
      _T_230.re <= _T_228.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_232 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_232.im <= _T_230.im @[Reg.scala 12:23]
      _T_232.re <= _T_230.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_234 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_234.im <= _T_232.im @[Reg.scala 12:23]
      _T_234.re <= _T_232.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_236 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_236.im <= _T_234.im @[Reg.scala 12:23]
      _T_236.re <= _T_234.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_238 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_238.im <= _T_236.im @[Reg.scala 12:23]
      _T_238.re <= _T_236.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    inst BF of BF @[R2MDC.scala 33:22]
    BF.clock <= clock
    BF.reset <= reset
    BF.io.in1.im <= _T_238.im @[R2MDC.scala 34:17]
    BF.io.in1.re <= _T_238.re @[R2MDC.scala 34:17]
    BF.io.in2.im <= io.dIn.im @[R2MDC.scala 35:17]
    BF.io.in2.re <= io.dIn.re @[R2MDC.scala 35:17]
    node _T_239 = bits(cnt, 4, 0) @[R2MDC.scala 131:23]
    wire _T_241 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 114:19]
    wire _T_277 : SInt<10>[32] @[R2MDC.scala 110:12]
    _T_277[0] <= asSInt(UInt<10>("h0100")) @[R2MDC.scala 110:12]
    _T_277[1] <= asSInt(UInt<10>("h0ff")) @[R2MDC.scala 110:12]
    _T_277[2] <= asSInt(UInt<10>("h0fb")) @[R2MDC.scala 110:12]
    _T_277[3] <= asSInt(UInt<10>("h0f5")) @[R2MDC.scala 110:12]
    _T_277[4] <= asSInt(UInt<10>("h0ed")) @[R2MDC.scala 110:12]
    _T_277[5] <= asSInt(UInt<10>("h0e2")) @[R2MDC.scala 110:12]
    _T_277[6] <= asSInt(UInt<10>("h0d5")) @[R2MDC.scala 110:12]
    _T_277[7] <= asSInt(UInt<10>("h0c6")) @[R2MDC.scala 110:12]
    _T_277[8] <= asSInt(UInt<10>("h0b5")) @[R2MDC.scala 110:12]
    _T_277[9] <= asSInt(UInt<10>("h0a2")) @[R2MDC.scala 110:12]
    _T_277[10] <= asSInt(UInt<10>("h08e")) @[R2MDC.scala 110:12]
    _T_277[11] <= asSInt(UInt<10>("h079")) @[R2MDC.scala 110:12]
    _T_277[12] <= asSInt(UInt<10>("h062")) @[R2MDC.scala 110:12]
    _T_277[13] <= asSInt(UInt<10>("h04a")) @[R2MDC.scala 110:12]
    _T_277[14] <= asSInt(UInt<10>("h032")) @[R2MDC.scala 110:12]
    _T_277[15] <= asSInt(UInt<10>("h019")) @[R2MDC.scala 110:12]
    _T_277[16] <= asSInt(UInt<10>("h00")) @[R2MDC.scala 110:12]
    _T_277[17] <= asSInt(UInt<10>("h03e7")) @[R2MDC.scala 110:12]
    _T_277[18] <= asSInt(UInt<10>("h03ce")) @[R2MDC.scala 110:12]
    _T_277[19] <= asSInt(UInt<10>("h03b6")) @[R2MDC.scala 110:12]
    _T_277[20] <= asSInt(UInt<10>("h039e")) @[R2MDC.scala 110:12]
    _T_277[21] <= asSInt(UInt<10>("h0387")) @[R2MDC.scala 110:12]
    _T_277[22] <= asSInt(UInt<10>("h0372")) @[R2MDC.scala 110:12]
    _T_277[23] <= asSInt(UInt<10>("h035e")) @[R2MDC.scala 110:12]
    _T_277[24] <= asSInt(UInt<10>("h034b")) @[R2MDC.scala 110:12]
    _T_277[25] <= asSInt(UInt<10>("h033a")) @[R2MDC.scala 110:12]
    _T_277[26] <= asSInt(UInt<10>("h032b")) @[R2MDC.scala 110:12]
    _T_277[27] <= asSInt(UInt<10>("h031e")) @[R2MDC.scala 110:12]
    _T_277[28] <= asSInt(UInt<10>("h0313")) @[R2MDC.scala 110:12]
    _T_277[29] <= asSInt(UInt<10>("h030b")) @[R2MDC.scala 110:12]
    _T_277[30] <= asSInt(UInt<10>("h0305")) @[R2MDC.scala 110:12]
    _T_277[31] <= asSInt(UInt<10>("h0301")) @[R2MDC.scala 110:12]
    _T_241.re <= _T_277[_T_239] @[R2MDC.scala 115:12]
    wire _T_348 : SInt<10>[32] @[R2MDC.scala 105:12]
    _T_348[0] <= asSInt(UInt<10>("h00")) @[R2MDC.scala 105:12]
    _T_348[1] <= asSInt(UInt<10>("h03e7")) @[R2MDC.scala 105:12]
    _T_348[2] <= asSInt(UInt<10>("h03ce")) @[R2MDC.scala 105:12]
    _T_348[3] <= asSInt(UInt<10>("h03b6")) @[R2MDC.scala 105:12]
    _T_348[4] <= asSInt(UInt<10>("h039e")) @[R2MDC.scala 105:12]
    _T_348[5] <= asSInt(UInt<10>("h0387")) @[R2MDC.scala 105:12]
    _T_348[6] <= asSInt(UInt<10>("h0372")) @[R2MDC.scala 105:12]
    _T_348[7] <= asSInt(UInt<10>("h035e")) @[R2MDC.scala 105:12]
    _T_348[8] <= asSInt(UInt<10>("h034b")) @[R2MDC.scala 105:12]
    _T_348[9] <= asSInt(UInt<10>("h033a")) @[R2MDC.scala 105:12]
    _T_348[10] <= asSInt(UInt<10>("h032b")) @[R2MDC.scala 105:12]
    _T_348[11] <= asSInt(UInt<10>("h031e")) @[R2MDC.scala 105:12]
    _T_348[12] <= asSInt(UInt<10>("h0313")) @[R2MDC.scala 105:12]
    _T_348[13] <= asSInt(UInt<10>("h030b")) @[R2MDC.scala 105:12]
    _T_348[14] <= asSInt(UInt<10>("h0305")) @[R2MDC.scala 105:12]
    _T_348[15] <= asSInt(UInt<10>("h0301")) @[R2MDC.scala 105:12]
    _T_348[16] <= asSInt(UInt<10>("h0300")) @[R2MDC.scala 105:12]
    _T_348[17] <= asSInt(UInt<10>("h0301")) @[R2MDC.scala 105:12]
    _T_348[18] <= asSInt(UInt<10>("h0305")) @[R2MDC.scala 105:12]
    _T_348[19] <= asSInt(UInt<10>("h030b")) @[R2MDC.scala 105:12]
    _T_348[20] <= asSInt(UInt<10>("h0313")) @[R2MDC.scala 105:12]
    _T_348[21] <= asSInt(UInt<10>("h031e")) @[R2MDC.scala 105:12]
    _T_348[22] <= asSInt(UInt<10>("h032b")) @[R2MDC.scala 105:12]
    _T_348[23] <= asSInt(UInt<10>("h033a")) @[R2MDC.scala 105:12]
    _T_348[24] <= asSInt(UInt<10>("h034b")) @[R2MDC.scala 105:12]
    _T_348[25] <= asSInt(UInt<10>("h035e")) @[R2MDC.scala 105:12]
    _T_348[26] <= asSInt(UInt<10>("h0372")) @[R2MDC.scala 105:12]
    _T_348[27] <= asSInt(UInt<10>("h0387")) @[R2MDC.scala 105:12]
    _T_348[28] <= asSInt(UInt<10>("h039e")) @[R2MDC.scala 105:12]
    _T_348[29] <= asSInt(UInt<10>("h03b6")) @[R2MDC.scala 105:12]
    _T_348[30] <= asSInt(UInt<10>("h03ce")) @[R2MDC.scala 105:12]
    _T_348[31] <= asSInt(UInt<10>("h03e7")) @[R2MDC.scala 105:12]
    _T_241.im <= _T_348[_T_239] @[R2MDC.scala 116:12]
    inst complexMul of complexMul @[R2MDC.scala 60:22]
    complexMul.clock <= clock
    complexMul.reset <= reset
    complexMul.io.in1.im <= BF.io.out2.im @[R2MDC.scala 61:17]
    complexMul.io.in1.re <= BF.io.out2.re @[R2MDC.scala 61:17]
    complexMul.io.in2.im <= _T_241.im @[R2MDC.scala 62:17]
    complexMul.io.in2.re <= _T_241.re @[R2MDC.scala 62:17]
    reg _T_386 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_386.im <= complexMul.io.out.im @[Reg.scala 12:23]
      _T_386.re <= complexMul.io.out.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_388 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_388.im <= _T_386.im @[Reg.scala 12:23]
      _T_388.re <= _T_386.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_390 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_390.im <= _T_388.im @[Reg.scala 12:23]
      _T_390.re <= _T_388.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_392 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_392.im <= _T_390.im @[Reg.scala 12:23]
      _T_392.re <= _T_390.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_394 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_394.im <= _T_392.im @[Reg.scala 12:23]
      _T_394.re <= _T_392.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_396 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_396.im <= _T_394.im @[Reg.scala 12:23]
      _T_396.re <= _T_394.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_398 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_398.im <= _T_396.im @[Reg.scala 12:23]
      _T_398.re <= _T_396.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_400 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_400.im <= _T_398.im @[Reg.scala 12:23]
      _T_400.re <= _T_398.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_402 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_402.im <= _T_400.im @[Reg.scala 12:23]
      _T_402.re <= _T_400.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_404 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_404.im <= _T_402.im @[Reg.scala 12:23]
      _T_404.re <= _T_402.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_406 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_406.im <= _T_404.im @[Reg.scala 12:23]
      _T_406.re <= _T_404.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_408 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_408.im <= _T_406.im @[Reg.scala 12:23]
      _T_408.re <= _T_406.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_410 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_410.im <= _T_408.im @[Reg.scala 12:23]
      _T_410.re <= _T_408.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_412 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_412.im <= _T_410.im @[Reg.scala 12:23]
      _T_412.re <= _T_410.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_414 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_414.im <= _T_412.im @[Reg.scala 12:23]
      _T_414.re <= _T_412.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_416 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_416.im <= _T_414.im @[Reg.scala 12:23]
      _T_416.re <= _T_414.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_417 = bits(cnt, 4, 4) @[R2MDC.scala 136:23]
    inst Switch of Switch @[R2MDC.scala 80:22]
    Switch.clock <= clock
    Switch.reset <= reset
    Switch.io.in1.im <= BF.io.out1.im @[R2MDC.scala 81:17]
    Switch.io.in1.re <= BF.io.out1.re @[R2MDC.scala 81:17]
    Switch.io.in2.im <= _T_416.im @[R2MDC.scala 82:17]
    Switch.io.in2.re <= _T_416.re @[R2MDC.scala 82:17]
    Switch.io.sel <= _T_417 @[R2MDC.scala 83:17]
    out1[0].im <= Switch.io.out1.im @[R2MDC.scala 138:15]
    out1[0].re <= Switch.io.out1.re @[R2MDC.scala 138:15]
    out2[0].im <= Switch.io.out2.im @[R2MDC.scala 139:15]
    out2[0].re <= Switch.io.out2.re @[R2MDC.scala 139:15]
    reg _T_420 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_420.im <= out1[0].im @[Reg.scala 12:23]
      _T_420.re <= out1[0].re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_422 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_422.im <= _T_420.im @[Reg.scala 12:23]
      _T_422.re <= _T_420.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_424 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_424.im <= _T_422.im @[Reg.scala 12:23]
      _T_424.re <= _T_422.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_426 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_426.im <= _T_424.im @[Reg.scala 12:23]
      _T_426.re <= _T_424.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_428 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_428.im <= _T_426.im @[Reg.scala 12:23]
      _T_428.re <= _T_426.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_430 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_430.im <= _T_428.im @[Reg.scala 12:23]
      _T_430.re <= _T_428.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_432 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_432.im <= _T_430.im @[Reg.scala 12:23]
      _T_432.re <= _T_430.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_434 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_434.im <= _T_432.im @[Reg.scala 12:23]
      _T_434.re <= _T_432.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_436 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_436.im <= _T_434.im @[Reg.scala 12:23]
      _T_436.re <= _T_434.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_438 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_438.im <= _T_436.im @[Reg.scala 12:23]
      _T_438.re <= _T_436.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_440 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_440.im <= _T_438.im @[Reg.scala 12:23]
      _T_440.re <= _T_438.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_442 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_442.im <= _T_440.im @[Reg.scala 12:23]
      _T_442.re <= _T_440.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_444 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_444.im <= _T_442.im @[Reg.scala 12:23]
      _T_444.re <= _T_442.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_446 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_446.im <= _T_444.im @[Reg.scala 12:23]
      _T_446.re <= _T_444.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_448 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_448.im <= _T_446.im @[Reg.scala 12:23]
      _T_448.re <= _T_446.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_450 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_450.im <= _T_448.im @[Reg.scala 12:23]
      _T_450.re <= _T_448.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    inst BF_1 of BF_1 @[R2MDC.scala 33:22]
    BF_1.clock <= clock
    BF_1.reset <= reset
    BF_1.io.in1.im <= _T_450.im @[R2MDC.scala 34:17]
    BF_1.io.in1.re <= _T_450.re @[R2MDC.scala 34:17]
    BF_1.io.in2.im <= out2[0].im @[R2MDC.scala 35:17]
    BF_1.io.in2.re <= out2[0].re @[R2MDC.scala 35:17]
    node _T_451 = bits(cnt, 3, 0) @[R2MDC.scala 144:23]
    wire _T_453 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 114:19]
    wire _T_473 : SInt<10>[16] @[R2MDC.scala 110:12]
    _T_473[0] <= asSInt(UInt<10>("h0100")) @[R2MDC.scala 110:12]
    _T_473[1] <= asSInt(UInt<10>("h0fb")) @[R2MDC.scala 110:12]
    _T_473[2] <= asSInt(UInt<10>("h0ed")) @[R2MDC.scala 110:12]
    _T_473[3] <= asSInt(UInt<10>("h0d5")) @[R2MDC.scala 110:12]
    _T_473[4] <= asSInt(UInt<10>("h0b5")) @[R2MDC.scala 110:12]
    _T_473[5] <= asSInt(UInt<10>("h08e")) @[R2MDC.scala 110:12]
    _T_473[6] <= asSInt(UInt<10>("h062")) @[R2MDC.scala 110:12]
    _T_473[7] <= asSInt(UInt<10>("h032")) @[R2MDC.scala 110:12]
    _T_473[8] <= asSInt(UInt<10>("h00")) @[R2MDC.scala 110:12]
    _T_473[9] <= asSInt(UInt<10>("h03ce")) @[R2MDC.scala 110:12]
    _T_473[10] <= asSInt(UInt<10>("h039e")) @[R2MDC.scala 110:12]
    _T_473[11] <= asSInt(UInt<10>("h0372")) @[R2MDC.scala 110:12]
    _T_473[12] <= asSInt(UInt<10>("h034b")) @[R2MDC.scala 110:12]
    _T_473[13] <= asSInt(UInt<10>("h032b")) @[R2MDC.scala 110:12]
    _T_473[14] <= asSInt(UInt<10>("h0313")) @[R2MDC.scala 110:12]
    _T_473[15] <= asSInt(UInt<10>("h0305")) @[R2MDC.scala 110:12]
    _T_453.re <= _T_473[_T_451] @[R2MDC.scala 115:12]
    wire _T_512 : SInt<10>[16] @[R2MDC.scala 105:12]
    _T_512[0] <= asSInt(UInt<10>("h00")) @[R2MDC.scala 105:12]
    _T_512[1] <= asSInt(UInt<10>("h03ce")) @[R2MDC.scala 105:12]
    _T_512[2] <= asSInt(UInt<10>("h039e")) @[R2MDC.scala 105:12]
    _T_512[3] <= asSInt(UInt<10>("h0372")) @[R2MDC.scala 105:12]
    _T_512[4] <= asSInt(UInt<10>("h034b")) @[R2MDC.scala 105:12]
    _T_512[5] <= asSInt(UInt<10>("h032b")) @[R2MDC.scala 105:12]
    _T_512[6] <= asSInt(UInt<10>("h0313")) @[R2MDC.scala 105:12]
    _T_512[7] <= asSInt(UInt<10>("h0305")) @[R2MDC.scala 105:12]
    _T_512[8] <= asSInt(UInt<10>("h0300")) @[R2MDC.scala 105:12]
    _T_512[9] <= asSInt(UInt<10>("h0305")) @[R2MDC.scala 105:12]
    _T_512[10] <= asSInt(UInt<10>("h0313")) @[R2MDC.scala 105:12]
    _T_512[11] <= asSInt(UInt<10>("h032b")) @[R2MDC.scala 105:12]
    _T_512[12] <= asSInt(UInt<10>("h034b")) @[R2MDC.scala 105:12]
    _T_512[13] <= asSInt(UInt<10>("h0372")) @[R2MDC.scala 105:12]
    _T_512[14] <= asSInt(UInt<10>("h039e")) @[R2MDC.scala 105:12]
    _T_512[15] <= asSInt(UInt<10>("h03ce")) @[R2MDC.scala 105:12]
    _T_453.im <= _T_512[_T_451] @[R2MDC.scala 116:12]
    inst complexMul_1 of complexMul_1 @[R2MDC.scala 60:22]
    complexMul_1.clock <= clock
    complexMul_1.reset <= reset
    complexMul_1.io.in1.im <= BF_1.io.out2.im @[R2MDC.scala 61:17]
    complexMul_1.io.in1.re <= BF_1.io.out2.re @[R2MDC.scala 61:17]
    complexMul_1.io.in2.im <= _T_453.im @[R2MDC.scala 62:17]
    complexMul_1.io.in2.re <= _T_453.re @[R2MDC.scala 62:17]
    reg _T_534 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_534.im <= complexMul_1.io.out.im @[Reg.scala 12:23]
      _T_534.re <= complexMul_1.io.out.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_536 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_536.im <= _T_534.im @[Reg.scala 12:23]
      _T_536.re <= _T_534.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_538 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_538.im <= _T_536.im @[Reg.scala 12:23]
      _T_538.re <= _T_536.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_540 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_540.im <= _T_538.im @[Reg.scala 12:23]
      _T_540.re <= _T_538.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_542 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_542.im <= _T_540.im @[Reg.scala 12:23]
      _T_542.re <= _T_540.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_544 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_544.im <= _T_542.im @[Reg.scala 12:23]
      _T_544.re <= _T_542.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_546 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_546.im <= _T_544.im @[Reg.scala 12:23]
      _T_546.re <= _T_544.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_548 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_548.im <= _T_546.im @[Reg.scala 12:23]
      _T_548.re <= _T_546.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_549 = bits(cnt, 3, 3) @[R2MDC.scala 149:23]
    inst Switch_1 of Switch_1 @[R2MDC.scala 80:22]
    Switch_1.clock <= clock
    Switch_1.reset <= reset
    Switch_1.io.in1.im <= BF_1.io.out1.im @[R2MDC.scala 81:17]
    Switch_1.io.in1.re <= BF_1.io.out1.re @[R2MDC.scala 81:17]
    Switch_1.io.in2.im <= _T_548.im @[R2MDC.scala 82:17]
    Switch_1.io.in2.re <= _T_548.re @[R2MDC.scala 82:17]
    Switch_1.io.sel <= _T_549 @[R2MDC.scala 83:17]
    out1[1].im <= Switch_1.io.out1.im @[R2MDC.scala 151:15]
    out1[1].re <= Switch_1.io.out1.re @[R2MDC.scala 151:15]
    out2[1].im <= Switch_1.io.out2.im @[R2MDC.scala 152:15]
    out2[1].re <= Switch_1.io.out2.re @[R2MDC.scala 152:15]
    reg _T_552 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_552.im <= out1[1].im @[Reg.scala 12:23]
      _T_552.re <= out1[1].re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_554 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_554.im <= _T_552.im @[Reg.scala 12:23]
      _T_554.re <= _T_552.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_556 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_556.im <= _T_554.im @[Reg.scala 12:23]
      _T_556.re <= _T_554.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_558 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_558.im <= _T_556.im @[Reg.scala 12:23]
      _T_558.re <= _T_556.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_560 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_560.im <= _T_558.im @[Reg.scala 12:23]
      _T_560.re <= _T_558.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_562 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_562.im <= _T_560.im @[Reg.scala 12:23]
      _T_562.re <= _T_560.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_564 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_564.im <= _T_562.im @[Reg.scala 12:23]
      _T_564.re <= _T_562.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_566 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_566.im <= _T_564.im @[Reg.scala 12:23]
      _T_566.re <= _T_564.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    inst BF_2 of BF_2 @[R2MDC.scala 33:22]
    BF_2.clock <= clock
    BF_2.reset <= reset
    BF_2.io.in1.im <= _T_566.im @[R2MDC.scala 34:17]
    BF_2.io.in1.re <= _T_566.re @[R2MDC.scala 34:17]
    BF_2.io.in2.im <= out2[1].im @[R2MDC.scala 35:17]
    BF_2.io.in2.re <= out2[1].re @[R2MDC.scala 35:17]
    node _T_567 = bits(cnt, 2, 0) @[R2MDC.scala 144:23]
    wire _T_569 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 114:19]
    wire _T_581 : SInt<10>[8] @[R2MDC.scala 110:12]
    _T_581[0] <= asSInt(UInt<10>("h0100")) @[R2MDC.scala 110:12]
    _T_581[1] <= asSInt(UInt<10>("h0ed")) @[R2MDC.scala 110:12]
    _T_581[2] <= asSInt(UInt<10>("h0b5")) @[R2MDC.scala 110:12]
    _T_581[3] <= asSInt(UInt<10>("h062")) @[R2MDC.scala 110:12]
    _T_581[4] <= asSInt(UInt<10>("h00")) @[R2MDC.scala 110:12]
    _T_581[5] <= asSInt(UInt<10>("h039e")) @[R2MDC.scala 110:12]
    _T_581[6] <= asSInt(UInt<10>("h034b")) @[R2MDC.scala 110:12]
    _T_581[7] <= asSInt(UInt<10>("h0313")) @[R2MDC.scala 110:12]
    _T_569.re <= _T_581[_T_567] @[R2MDC.scala 115:12]
    wire _T_604 : SInt<10>[8] @[R2MDC.scala 105:12]
    _T_604[0] <= asSInt(UInt<10>("h00")) @[R2MDC.scala 105:12]
    _T_604[1] <= asSInt(UInt<10>("h039e")) @[R2MDC.scala 105:12]
    _T_604[2] <= asSInt(UInt<10>("h034b")) @[R2MDC.scala 105:12]
    _T_604[3] <= asSInt(UInt<10>("h0313")) @[R2MDC.scala 105:12]
    _T_604[4] <= asSInt(UInt<10>("h0300")) @[R2MDC.scala 105:12]
    _T_604[5] <= asSInt(UInt<10>("h0313")) @[R2MDC.scala 105:12]
    _T_604[6] <= asSInt(UInt<10>("h034b")) @[R2MDC.scala 105:12]
    _T_604[7] <= asSInt(UInt<10>("h039e")) @[R2MDC.scala 105:12]
    _T_569.im <= _T_604[_T_567] @[R2MDC.scala 116:12]
    inst complexMul_2 of complexMul_2 @[R2MDC.scala 60:22]
    complexMul_2.clock <= clock
    complexMul_2.reset <= reset
    complexMul_2.io.in1.im <= BF_2.io.out2.im @[R2MDC.scala 61:17]
    complexMul_2.io.in1.re <= BF_2.io.out2.re @[R2MDC.scala 61:17]
    complexMul_2.io.in2.im <= _T_569.im @[R2MDC.scala 62:17]
    complexMul_2.io.in2.re <= _T_569.re @[R2MDC.scala 62:17]
    reg _T_618 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_618.im <= complexMul_2.io.out.im @[Reg.scala 12:23]
      _T_618.re <= complexMul_2.io.out.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_620 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_620.im <= _T_618.im @[Reg.scala 12:23]
      _T_620.re <= _T_618.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_622 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_622.im <= _T_620.im @[Reg.scala 12:23]
      _T_622.re <= _T_620.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_624 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_624.im <= _T_622.im @[Reg.scala 12:23]
      _T_624.re <= _T_622.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_625 = bits(cnt, 2, 2) @[R2MDC.scala 149:23]
    inst Switch_2 of Switch_2 @[R2MDC.scala 80:22]
    Switch_2.clock <= clock
    Switch_2.reset <= reset
    Switch_2.io.in1.im <= BF_2.io.out1.im @[R2MDC.scala 81:17]
    Switch_2.io.in1.re <= BF_2.io.out1.re @[R2MDC.scala 81:17]
    Switch_2.io.in2.im <= _T_624.im @[R2MDC.scala 82:17]
    Switch_2.io.in2.re <= _T_624.re @[R2MDC.scala 82:17]
    Switch_2.io.sel <= _T_625 @[R2MDC.scala 83:17]
    out1[2].im <= Switch_2.io.out1.im @[R2MDC.scala 151:15]
    out1[2].re <= Switch_2.io.out1.re @[R2MDC.scala 151:15]
    out2[2].im <= Switch_2.io.out2.im @[R2MDC.scala 152:15]
    out2[2].re <= Switch_2.io.out2.re @[R2MDC.scala 152:15]
    reg _T_628 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_628.im <= out1[2].im @[Reg.scala 12:23]
      _T_628.re <= out1[2].re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_630 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_630.im <= _T_628.im @[Reg.scala 12:23]
      _T_630.re <= _T_628.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_632 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_632.im <= _T_630.im @[Reg.scala 12:23]
      _T_632.re <= _T_630.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_634 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_634.im <= _T_632.im @[Reg.scala 12:23]
      _T_634.re <= _T_632.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    inst BF_3 of BF_3 @[R2MDC.scala 33:22]
    BF_3.clock <= clock
    BF_3.reset <= reset
    BF_3.io.in1.im <= _T_634.im @[R2MDC.scala 34:17]
    BF_3.io.in1.re <= _T_634.re @[R2MDC.scala 34:17]
    BF_3.io.in2.im <= out2[2].im @[R2MDC.scala 35:17]
    BF_3.io.in2.re <= out2[2].re @[R2MDC.scala 35:17]
    node _T_635 = bits(cnt, 1, 0) @[R2MDC.scala 144:23]
    wire _T_637 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 114:19]
    wire _T_645 : SInt<10>[4] @[R2MDC.scala 110:12]
    _T_645[0] <= asSInt(UInt<10>("h0100")) @[R2MDC.scala 110:12]
    _T_645[1] <= asSInt(UInt<10>("h0b5")) @[R2MDC.scala 110:12]
    _T_645[2] <= asSInt(UInt<10>("h00")) @[R2MDC.scala 110:12]
    _T_645[3] <= asSInt(UInt<10>("h034b")) @[R2MDC.scala 110:12]
    _T_637.re <= _T_645[_T_635] @[R2MDC.scala 115:12]
    wire _T_660 : SInt<10>[4] @[R2MDC.scala 105:12]
    _T_660[0] <= asSInt(UInt<10>("h00")) @[R2MDC.scala 105:12]
    _T_660[1] <= asSInt(UInt<10>("h034b")) @[R2MDC.scala 105:12]
    _T_660[2] <= asSInt(UInt<10>("h0300")) @[R2MDC.scala 105:12]
    _T_660[3] <= asSInt(UInt<10>("h034b")) @[R2MDC.scala 105:12]
    _T_637.im <= _T_660[_T_635] @[R2MDC.scala 116:12]
    inst complexMul_3 of complexMul_3 @[R2MDC.scala 60:22]
    complexMul_3.clock <= clock
    complexMul_3.reset <= reset
    complexMul_3.io.in1.im <= BF_3.io.out2.im @[R2MDC.scala 61:17]
    complexMul_3.io.in1.re <= BF_3.io.out2.re @[R2MDC.scala 61:17]
    complexMul_3.io.in2.im <= _T_637.im @[R2MDC.scala 62:17]
    complexMul_3.io.in2.re <= _T_637.re @[R2MDC.scala 62:17]
    reg _T_670 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_670.im <= complexMul_3.io.out.im @[Reg.scala 12:23]
      _T_670.re <= complexMul_3.io.out.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_672 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_672.im <= _T_670.im @[Reg.scala 12:23]
      _T_672.re <= _T_670.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_673 = bits(cnt, 1, 1) @[R2MDC.scala 149:23]
    inst Switch_3 of Switch_3 @[R2MDC.scala 80:22]
    Switch_3.clock <= clock
    Switch_3.reset <= reset
    Switch_3.io.in1.im <= BF_3.io.out1.im @[R2MDC.scala 81:17]
    Switch_3.io.in1.re <= BF_3.io.out1.re @[R2MDC.scala 81:17]
    Switch_3.io.in2.im <= _T_672.im @[R2MDC.scala 82:17]
    Switch_3.io.in2.re <= _T_672.re @[R2MDC.scala 82:17]
    Switch_3.io.sel <= _T_673 @[R2MDC.scala 83:17]
    out1[3].im <= Switch_3.io.out1.im @[R2MDC.scala 151:15]
    out1[3].re <= Switch_3.io.out1.re @[R2MDC.scala 151:15]
    out2[3].im <= Switch_3.io.out2.im @[R2MDC.scala 152:15]
    out2[3].re <= Switch_3.io.out2.re @[R2MDC.scala 152:15]
    reg _T_676 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_676.im <= out1[3].im @[Reg.scala 12:23]
      _T_676.re <= out1[3].re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_678 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_678.im <= _T_676.im @[Reg.scala 12:23]
      _T_678.re <= _T_676.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    inst BF_4 of BF_4 @[R2MDC.scala 33:22]
    BF_4.clock <= clock
    BF_4.reset <= reset
    BF_4.io.in1.im <= _T_678.im @[R2MDC.scala 34:17]
    BF_4.io.in1.re <= _T_678.re @[R2MDC.scala 34:17]
    BF_4.io.in2.im <= out2[3].im @[R2MDC.scala 35:17]
    BF_4.io.in2.re <= out2[3].re @[R2MDC.scala 35:17]
    node _T_679 = bits(cnt, 0, 0) @[R2MDC.scala 144:23]
    wire _T_681 : {re : SInt<10>, im : SInt<10>} @[R2MDC.scala 114:19]
    wire _T_687 : SInt<10>[2] @[R2MDC.scala 110:12]
    _T_687[0] <= asSInt(UInt<10>("h0100")) @[R2MDC.scala 110:12]
    _T_687[1] <= asSInt(UInt<10>("h00")) @[R2MDC.scala 110:12]
    _T_681.re <= _T_687[_T_679] @[R2MDC.scala 115:12]
    wire _T_698 : SInt<10>[2] @[R2MDC.scala 105:12]
    _T_698[0] <= asSInt(UInt<10>("h00")) @[R2MDC.scala 105:12]
    _T_698[1] <= asSInt(UInt<10>("h0300")) @[R2MDC.scala 105:12]
    _T_681.im <= _T_698[_T_679] @[R2MDC.scala 116:12]
    inst complexMul_4 of complexMul_4 @[R2MDC.scala 60:22]
    complexMul_4.clock <= clock
    complexMul_4.reset <= reset
    complexMul_4.io.in1.im <= BF_4.io.out2.im @[R2MDC.scala 61:17]
    complexMul_4.io.in1.re <= BF_4.io.out2.re @[R2MDC.scala 61:17]
    complexMul_4.io.in2.im <= _T_681.im @[R2MDC.scala 62:17]
    complexMul_4.io.in2.re <= _T_681.re @[R2MDC.scala 62:17]
    reg _T_706 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_706.im <= complexMul_4.io.out.im @[Reg.scala 12:23]
      _T_706.re <= complexMul_4.io.out.re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_707 = bits(cnt, 0, 0) @[R2MDC.scala 149:23]
    inst Switch_4 of Switch_4 @[R2MDC.scala 80:22]
    Switch_4.clock <= clock
    Switch_4.reset <= reset
    Switch_4.io.in1.im <= BF_4.io.out1.im @[R2MDC.scala 81:17]
    Switch_4.io.in1.re <= BF_4.io.out1.re @[R2MDC.scala 81:17]
    Switch_4.io.in2.im <= _T_706.im @[R2MDC.scala 82:17]
    Switch_4.io.in2.re <= _T_706.re @[R2MDC.scala 82:17]
    Switch_4.io.sel <= _T_707 @[R2MDC.scala 83:17]
    out1[4].im <= Switch_4.io.out1.im @[R2MDC.scala 151:15]
    out1[4].re <= Switch_4.io.out1.re @[R2MDC.scala 151:15]
    out2[4].im <= Switch_4.io.out2.im @[R2MDC.scala 152:15]
    out2[4].re <= Switch_4.io.out2.re @[R2MDC.scala 152:15]
    reg _T_710 : {re : SInt<10>, im : SInt<10>}, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_710.im <= out1[4].im @[Reg.scala 12:23]
      _T_710.re <= out1[4].re @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    inst BF_5 of BF_5 @[R2MDC.scala 33:22]
    BF_5.clock <= clock
    BF_5.reset <= reset
    BF_5.io.in1.im <= _T_710.im @[R2MDC.scala 34:17]
    BF_5.io.in1.re <= _T_710.re @[R2MDC.scala 34:17]
    BF_5.io.in2.im <= out2[4].im @[R2MDC.scala 35:17]
    BF_5.io.in2.re <= out2[4].re @[R2MDC.scala 35:17]
    out1[5].im <= BF_5.io.out1.im @[R2MDC.scala 157:15]
    out1[5].re <= BF_5.io.out1.re @[R2MDC.scala 157:15]
    out2[5].im <= BF_5.io.out2.im @[R2MDC.scala 158:15]
    out2[5].re <= BF_5.io.out2.re @[R2MDC.scala 158:15]
    reg _T_712 : {re : SInt<10>, im : SInt<10>}, clock @[R2MDC.scala 161:22]
    _T_712.im <= out1[5].im @[R2MDC.scala 161:22]
    _T_712.re <= out1[5].re @[R2MDC.scala 161:22]
    io.dOut1.im <= _T_712.im @[R2MDC.scala 161:12]
    io.dOut1.re <= _T_712.re @[R2MDC.scala 161:12]
    reg _T_714 : {re : SInt<10>, im : SInt<10>}, clock @[R2MDC.scala 162:22]
    _T_714.im <= out2[5].im @[R2MDC.scala 162:22]
    _T_714.re <= out2[5].re @[R2MDC.scala 162:22]
    io.dOut2.im <= _T_714.im @[R2MDC.scala 162:12]
    io.dOut2.re <= _T_714.re @[R2MDC.scala 162:12]
    reg _T_717 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_717 <= io.din_valid @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_719 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_719 <= _T_717 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_721 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_721 <= _T_719 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_723 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_723 <= _T_721 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_725 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_725 <= _T_723 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_727 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_727 <= _T_725 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_729 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_729 <= _T_727 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_731 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_731 <= _T_729 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_733 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_733 <= _T_731 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_735 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_735 <= _T_733 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_737 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_737 <= _T_735 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_739 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_739 <= _T_737 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_741 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_741 <= _T_739 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_743 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_743 <= _T_741 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_745 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_745 <= _T_743 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_747 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_747 <= _T_745 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_749 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_749 <= _T_747 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_751 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_751 <= _T_749 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_753 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_753 <= _T_751 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_755 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_755 <= _T_753 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_757 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_757 <= _T_755 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_759 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_759 <= _T_757 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_761 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_761 <= _T_759 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_763 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_763 <= _T_761 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_765 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_765 <= _T_763 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_767 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_767 <= _T_765 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_769 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_769 <= _T_767 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_771 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_771 <= _T_769 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_773 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_773 <= _T_771 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_775 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_775 <= _T_773 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_777 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_777 <= _T_775 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_779 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_779 <= _T_777 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_781 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_781 <= _T_779 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_783 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_783 <= _T_781 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_785 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_785 <= _T_783 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_787 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_787 <= _T_785 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_789 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_789 <= _T_787 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_791 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_791 <= _T_789 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_793 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_793 <= _T_791 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_795 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_795 <= _T_793 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_797 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_797 <= _T_795 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_799 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_799 <= _T_797 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_801 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_801 <= _T_799 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_803 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_803 <= _T_801 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_805 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_805 <= _T_803 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_807 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_807 <= _T_805 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_809 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_809 <= _T_807 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_811 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_811 <= _T_809 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_813 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_813 <= _T_811 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_815 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_815 <= _T_813 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_817 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_817 <= _T_815 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_819 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_819 <= _T_817 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_821 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_821 <= _T_819 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_823 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_823 <= _T_821 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_825 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_825 <= _T_823 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_827 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_827 <= _T_825 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_829 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_829 <= _T_827 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_831 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_831 <= _T_829 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_833 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_833 <= _T_831 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_835 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_835 <= _T_833 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_837 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_837 <= _T_835 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_839 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_839 <= _T_837 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_841 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_841 <= _T_839 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_843 : UInt<1>, clock @[Reg.scala 11:16]
    when UInt<1>("h01") : @[Reg.scala 12:19]
      _T_843 <= _T_841 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    io.dout_valid <= _T_843 @[R2MDC.scala 163:17]
    
